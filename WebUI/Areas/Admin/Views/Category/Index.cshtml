@using X.PagedList
@using EntityLayer.Concrete
@using X.PagedList.Mvc.Core

@model IPagedList<Tag>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<div class="container">
    <div class="row">
        <table class="table table-bordered">
            <tr>
                <th> Id </th>
                <th> Name </th>
                <th> Action </th>
            </tr>
            @foreach (var item in Model)
            {
                <tr>
                    <td> @item.Id </td>
                    <td> @item.Name </td>
                    <td>
                        <a href="#" class="btn btn-outline-primary"> activate </a>
                        <button id="deleteButton" onclick="myFunc(@item.Id)" class="btn btn-outline-danger"> Delete </button>
                        <a href="#" class="btn btn-success"> Action </a>
                    </td>
                </tr>
            }
        </table>
    </div>
    <div class="row">
        <div class="ml-auto">
            <a class="btn btn-info btn-lg" href="/Admin/Category/Add">Add</a>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="ml-auto">
            @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new {page}))
        </div>
    </div>
</div>

<script>

    function myFunc(Id) {
        Swal.fire({
            title: "Delete?",
            text: "Please ensure and then confirm!",
            type: "warning",
            confirmButtonText: "Yes, delete it!",
            cancelButtonText: "No, cancel!",
            showCancelButton: true
        }).then(function (e) {

            if (e.isConfirmed == true) {
                debugger;

                $.ajax({
                    type: 'POST',
                    url: "/Admin/Category/Delete/" + Id,
                    //dataType: 'JSON',
                    success: function (e) {
                        //if (e.success === true) {
                        Swal.fire({
                            title: 'Done!',
                            icon: 'success',
                            showConfirmButton: false,
                            timer: 2500
                        });
                        setTimeout(function () {
                            location.reload()
                        }, 2000);
                        //}
                    },
                    error: function (e) {
                        debugger;
                        Swal.fire({
                            title: 'Error',
                            icon: 'error',
                            showConfirmButton: false,
                            timer: 2500
                        });
                    }
                });
            }
        });
    }

</script>